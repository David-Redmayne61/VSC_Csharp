@model PeopleViewModel
@{
    ViewData["Title"] = "Delete Records";
}

<div class="container">
    <h2 class="mb-4">Delete Records</h2>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <style>
        /* More specific selectors to override Bootstrap */
        .table tbody tr.selected-row,
        .table-striped tbody tr.selected-row:nth-of-type(odd),
        .table-striped tbody tr.selected-row:nth-of-type(even),
        .table-hover tbody tr.selected-row:hover {
            background-color: rgba(13, 110, 253, 0.15) !important;
        }
        tr[data-selected="true"] {
            background-color: #e3f2fd !important;
        }
        tr[data-selected="true"]:hover {
            background-color: #bbdefb !important;
        }
        .keyboard-help {
            font-size: 0.875rem;
            color: #6c757d;
        }
    </style>

    <form asp-action="DeleteSelected" method="post">
        @Html.AntiForgeryToken()
        
        <div class="mb-3 d-flex justify-content-between align-items-center">
            <div>
                <button type="submit" class="btn btn-danger" onclick="return confirm('Are you sure you want to delete the selected records?')" id="deleteButton" disabled>
                    <i class="fas fa-trash"></i> Delete Selected (<span id="selectedCount">0</span>)
                </button>
                <a asp-action="ViewPeople" class="btn btn-secondary">Back to List</a>
            </div>
            <div class="text-muted">
                <div>Total Records: @Model.People.Count</div>
                <div class="keyboard-help">
                    Shortcuts: <kbd>a</kbd> Select All | <kbd>n</kbd> Select None | <kbd>i</kbd> Invert Selection
                </div>
            </div>
        </div>

        <div class="card">
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-hover table-striped">
                        <thead>
                            <tr>
                                <th>
                                    <div class="form-check">
                                        <input type="checkbox" id="selectAll" class="form-check-input" />
                                        <label class="form-check-label" for="selectAll">Select All</label>
                                    </div>
                                </th>
                                <th>Family Name</th>
                                <th>Forename</th>
                                <th>Gender</th>
                                <th>Year of Birth</th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.People.Count; i++)
                            {
                                <tr>
                                    <td>
                                        <input type="hidden" asp-for="@Model.People[i].Person.Id" />
                                        <input type="checkbox" asp-for="@Model.People[i].IsSelected" class="form-check-input" />
                                    </td>
                                    <td>@Model.People[i].Person.FamilyName</td>
                                    <td>@Model.People[i].Person.Forename</td>
                                    <td>@Model.People[i].Person.Gender</td>
                                    <td>@Model.People[i].Person.YearOfBirth</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </form>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const selectAllCheckbox = document.getElementById('selectAll');
            const deleteButton = document.getElementById('deleteButton');
            const selectedCountSpan = document.getElementById('selectedCount');
            const checkboxes = document.querySelectorAll('tbody input[type="checkbox"].form-check-input');
            
            function updateRowHighlight(checkbox) {
                const row = checkbox.closest('tr');
                if (row) {
                    row.setAttribute('data-selected', checkbox.checked);
                }
            }
            
            function updateSelectedCount() {
                const checkedCount = document.querySelectorAll('tbody input[type="checkbox"].form-check-input:checked').length;
                selectedCountSpan.textContent = checkedCount;
                deleteButton.disabled = checkedCount === 0;
            }
            
            function toggleAll(checked) {
                checkboxes.forEach(checkbox => {
                    checkbox.checked = checked;
                    updateRowHighlight(checkbox);
                });
                updateSelectedCount();
            }
            
            // Initialize all checkboxes
            checkboxes.forEach(checkbox => {
                checkbox.addEventListener('change', function() {
                    updateRowHighlight(this);
                    updateSelectedCount();
                });
                // Set initial state
                updateRowHighlight(checkbox);
            });
            
            // Handle Select All
            selectAllCheckbox.addEventListener('change', function() {
                toggleAll(this.checked);
            });
            
            // Handle keyboard shortcuts
            document.addEventListener('keydown', function(e) {
                if (e.target.tagName === 'INPUT') return;
                
                switch(e.key.toLowerCase()) {
                    case 'a': 
                        e.preventDefault();
                        toggleAll(true);
                        selectAllCheckbox.checked = true;
                        break;
                    case 'n':
                        e.preventDefault();
                        toggleAll(false);
                        selectAllCheckbox.checked = false;
                        break;
                    case 'i':
                        e.preventDefault();
                        checkboxes.forEach(checkbox => {
                            checkbox.checked = !checkbox.checked;
                            updateRowHighlight(checkbox);
                        });
                        updateSelectedCount();
                        break;
                }
            });
            
            // Initial update
            updateSelectedCount();
        });
    </script>
}